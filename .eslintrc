{
  "root": true, //停止在父级目录中寻找
  //设置环境 （env）
  "env": {
    "browser": true, //是否启用浏览器全局变量。
    "node": true, //是否启用浏览器和Node.js环境
    "jasmine": true, // 为版本 1.3 和 2.0 添加所有 Jasmine 测试全局变量
    "jest": true, // Jest 全局变量
    "es6": true // 启用除 modules 以外的所有 ECMAScript 6 特性  (这会自动将 `ecmaVersion` 解析器选项设置为 6)
  },
  "parser": "@typescript-eslint/parser", //解析器
  "parserOptions": {
    //解析器选项
    "parser": "babel-eslint", //解析器
    "sourceType": "module"
  },
  "extends": [
    //配置扩展文件extends 多个模块，如果规则冲突，位置靠后的包将覆盖前面的。rules 中的规则相同，并且优先级恒定高于 extends
    "plugin:jsdoc/recommended", //plugin需要在 rules、extends 中定义后才会生效，如果没有则不生效。
    "plugin:vue/vue3-recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "prettier"
  ],
  "plugins": ["@typescript-eslint", "eslint-plugin-jsdoc", "import"], //存放插件名字的列表,只是加载
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.vue"],
      "extends": ["@vue/typescript/recommended", "prettier", "@vue/prettier/@typescript-eslint"],
      "parserOptions": {
        "project": "./tsconfig.json",
        "ecmaFeatures": {
          "JSX": true
        }
      },
      "settings": {
        "import/parsers": {
          // 使用 TypeScript parser
          "@typescript-eslint/parser": [".ts", ".tsx"]
        },
        "import/resolver": {
          // 默认使用根目录 tsconfig.json
          "typescript": {
            // 从 <roo/>@types 读取类型定义
            "alwaysTryTypes": true
          }
        }
      },
      "parser": "@typescript-eslint/parser",
      "plugins": ["@typescript-eslint"],
      "rules": {
        "multiline-comment-style": ["error", "starred-block"],
        "line-comment-position": ["warn", { "position": "above" }],
        "import/no-named-as-default": 0, // 导入需要将default as 名称
        "@typescript-eslint/no-explicit-any": 2, //禁止使用any类型
        "@typescript-eslint/adjacent-overload-signatures": "warn", //要求该成员重载是连续的
        "@typescript-eslint/explicit-function-return-type": "warn", //要求函数和类方法的显式返回类型
        "@typescript-eslint/no-unsafe-return": "warn", // 禁止函数返回any
        "@typescript-eslint/ban-ts-comment": [
          "warn",
          {
            "ts-check": "allow-with-description"
          }
        ],
        "@typescript-eslint/ban-types": 0,
        "@typescript-eslint/consistent-type-imports": "error",
        "@typescript-eslint/explicit-module-boundary-types": 0,
        "@typescript-eslint/no-empty-function": 0,
        "@typescript-eslint/no-non-null-assertion": 0,
        "@typescript-eslint/no-unused-vars": ["error", { "vars": "all", "args": "after-used", "ignoreRestSiblings": true }]
      }
    },
    {
      "files": ["*.vue"],
      "parser": "vue-eslint-parser",
      "parserOptions": {
        "parser": "@typescript-eslint/parser"
      },
      "rules": {
        "import/no-named-as-default": 0, // 导入需要将default as 名称
        "@typescript-eslint/no-explicit-any": 2, //禁止使用any类型
        "no-console": "off",
        "@typescript-eslint/no-unused-vars": ["warn", { "vars": "all", "args": "after-used", "ignoreRestSiblings": true }]
      }
    }
  ],
  "rules": {
    "no-mixed-spaces-and-tabs": [2, false], //禁止混用tab和空格
    "no-extra-semi": 2, //禁止多余的冒号
    "no-multiple-empty-lines": [1, { "max": 3 }], //空行最多不能超过2行
    "no-negated-in-lhs": 2, //in 操作符的左边不能有!
    "no-new-func": 1, //禁止使用new Function
    "no-new-object": 2, //禁止使用new Object()
    "no-new-require": 2, //禁止使用new require
    "no-new": 1, //禁止在使用new构造一个实例后不赋值
    "no-unneeded-ternary": 2, //禁止不必要的嵌套 var isYes = answer === 1 ? true : false;
    "no-unreachable": 2, //不能有无法执行的代码
    "no-unused-expressions": 2, //禁止无用的表达式
    "no-use-before-define": 2, //未定义前不能使用
    "no-useless-call": 2, //禁止不必要的call和apply
    "no-void": 2, //禁用void操作符
    "no-warning-comments": [1, { "terms": ["todo", "fixme", "xxx"], "location": "start" }], //不能有警告备注
    "array-bracket-spacing": [2, "never"], //是否允许非空数组里面有多余的空格
    "no-with": 2, //禁用with
    "arrow-parens": 0, //箭头函数用小括号括起来
    "arrow-spacing": 0, //=>的前/后括号
    "accessor-pairs": 0, //在对象中使用getter/setter
    "block-scoped-var": 2, //块语句中使用var
    "no-var": 2, //禁用var，用let和const代替
    "complexity": [0, 11], //循环复杂度
    "linebreak-style": [0, "error", "windows"], //换行风格
    // "linebreak-style": [0, "windows"],
    "computed-property-spacing": [0, "never"], //是否允许计算后的键名什么的
    "consistent-return": 0, //return 后面是否允许省略
    "consistent-this": [2, "that"], //this别名
    "constructor-super": 2, //非派生类不能调用super，派生类必须调用super
    "curly": [2, "all"], //必须使用 if(){} 中的{}
    "default-case": 2, //switch语句最后必须有default
    "dot-location": 0, //对象访问符的位置，换行的时候在行首还是行尾
    "dot-notation": [0, { "allowKeywords": true }], //避免不必要的方括号
    "eol-last": 0, //文件以单一的换行符结束
    "eqeqeq": 2, //必须使用全等
    "func-names": 0, //函数表达式必须有名字
    "func-style": [0, "declaration"], //函数风格，规定只能使用函数声明/函数表达式
    "generator-star-spacing": 0, //生成器函数*的前后空格
    "guard-for-in": 0, //for in循环要用if语句过滤
    "handle-callback-err": 0, //nodejs 处理错误
    "id-length": 0, //变量名长度
    // "indent": [2, 2], //缩进风格
    "init-declarations": 0, //声明时必须赋初值
    "key-spacing": [0, { "beforeColon": false, "afterColon": true }], //对象字面量中冒号的前后空格
    "lines-around-comment": 0, //行前/行后备注
    "max-depth": [0, 4], //嵌套块深度
    "max-len": [0, 80, 4], //字符串最大长度
    "max-nested-callbacks": [0, 2], //回调嵌套深度
    "max-params": [0, 3], //函数最多只能有3个参数
    "max-statements": [0, 10], //函数内最多有几个声明
    "new-cap": 2, //函数名首行大写必须使用new方式调用，首行小写必须用不带new方式调用
    "new-parens": 2, //new时必须加小括号
    "newline-after-var": 2, //变量声明后是否需要空一行
    // "padding-line-between-statements": [
    //   "error",
    //   { "blankLine": "always", "prev": "let", "next": "function" },
    //   { "blankLine": "always", "prev": "var", "next": "function" },
    //   { "blankLine": "always", "prev": "const", "next": "function" },
    //   { "blankLine": "always", "prev": "let", "next": "return" },
    //   { "blankLine": "always", "prev": "var", "next": "return" },
    //   { "blankLine": "always", "prev": "const", "next": "return" },
    //   { "blankLine": "always", "prev": "block", "next": "return" }
    // ], //变量声明后是否需要空一行
    "object-curly-spacing": [0, "never"], //大括号内是否允许不必要的空格
    "one-var": 0, //连续声明
    "operator-assignment": [0, "always"], //赋值运算符 += -=什么的
    "operator-linebreak": [2, "after"], //换行时运算符在行尾还是行首
    "padded-blocks": 0, //块语句内行首行尾是否要空行
    "prefer-const": 0, //首选const
    "prefer-spread": 0, //首选展开运算
    "prefer-reflect": 0, //首选Reflect的方法
    "quotes": [1, "single"], //引号类型 `` "" ''
    "quote-props": [0, "always"], //对象字面量中的属性名是否强制双引号
    "radix": 2, //parseInt必须指定第二个参数
    "id-match": 0, //命名检测
    "require-yield": 2, //生成器函数必须有yield
    "semi": 0, //语句强制分号结尾
    "semi-spacing": [0, { "before": false, "after": true }], //分号前后空格
    "sort-vars": 0, //变量声明时排序
    "space-after-keywords": [0, "always"], //关键字后面是否要空一格
    "space-before-blocks": [0, "always"], //不以新行开始的块{前面要不要有空格
    "space-before-function-paren": [0, "always"], //函数定义时括号前面要不要有空格
    "space-in-parens": [0, "never"], //小括号里面要不要有空格
    "space-infix-ops": 0, //中缀操作符周围要不要有空格
    "space-return-throw-case": 0, //return throw case后面要不要加空格
    "space-unary-ops": [0, { "words": true, "nonwords": false }], //一元运算符的前/后要不要加空格
    "spaced-comment": 0, //注释风格要不要有空格什么的
    "strict": 0, //使用严格模式
    "use-isnan": 2, //禁止比较时使用NaN，只能用isNaN()
    "valid-jsdoc": 0, //jsdoc规则
    "newline-after-description": 0,
    "valid-typeof": 2, //必须使用合法的typeof的值
    "vars-on-top": 2, //var必须放在作用域顶部
    "wrap-iife": [2, "inside"], //立即执行函数表达式的小括号风格
    "wrap-regex": 0, //正则表达式字面量用小括号包起来
    "yoda": [2, "never"], //禁止尤达条件
    "import/no-named-as-default": "off",
    "import/namespace": [2, { "allowComputed": true }],
    "import/no-named-as-default-member": "off",
    "import/no-unresolved": [0, { "ignore": ["ant-design-vue"] }],
    "comma-dangle": [2, "never"], //对象字面量项尾不能有逗号
    "no-console": [0, { "allow": ["warn", "error"] }],
    "object-shorthand": 2,
    "no-unused-vars": [2, { "vars": "all", "args": "after-used" }], //不能有声明后未被使用的变量或参数
    "no-undef": 0,
    "camelcase": "off",
    "no-extra-boolean-cast": "off",
    // "semi": ["error", "always"],
    "vue/no-v-html": "off",
    "vue/require-explicit-emits": "off",
    "vue/require-prop-types": "off",
    "vue/require-default-prop": "off",
    "vue/no-reserved-keys": "off",
    "vue/comment-directive": "off",
    "vue/prop-name-casing": "off",
    "vue/one-component-per-file": "off",
    "vue/custom-event-name-casing": "off",
    "vue/v-on-event-hyphenation": "off",
    "vue/max-attributes-per-line": [
      2,
      {
        "singleline": 20,
        "multiline": 1
      }
    ],
    "vue/multi-word-component-names": "off"
  },
  "globals": {
    "h": true,
    "JSX": true,
    "IFormItemType": true,
    "ISelectOptions": true
  }
}
